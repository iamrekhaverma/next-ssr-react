{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/rekha/my-next-app/pages/Spacex.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nimport { FiltersComponent } from \"../components/filter\";\nimport \"../Resources/main.css\";\nimport { fetchSpacex } from \"../Api\";\n\nfunction Spacex(props) {\n  _s();\n\n  var _this = this;\n\n  console.log(\"props rendered\", props);\n\n  var _useState = useState(props.data),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var query = _extends({}, props.router);\n\n  var handleApiCall = function handleApiCall(params) {\n    fetchSpacex(params).then(function (json) {\n      setData(json);\n    });\n  };\n\n  useEffect(function () {\n    // verify props have changed to avoid an infinite loop\n    // fetch data based on the new query\n    handleApiCall(query);\n    console.log(\"handleApiCall\", query);\n  }, query);\n  var history = props.history; //   console.log(\"1111111111\", data);\n\n  if (!data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, \"Error: \", props.error);\n  } else {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Spacex\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }), __jsx(FiltersComponent, {\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), data.map(function (item, index) {\n      return __jsx(\"div\", {\n        key: index,\n        className: \"spacex-card\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        src: item.links.mission_patch_small,\n        alt: \"User Icon\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }), __jsx(\"div\", {\n        className: \"UserDetails\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"card_content\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        href: \"#\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, item.mission_name, \" #\", item.flight_number), item.mission_id.length && __jsx(\"ul\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, __jsx(\"b\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \"Mission Ids\"), item.mission_id.map(function (id) {\n        return __jsx(\"li\", {\n          key: id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }\n        }, id);\n      })), item.launch_year && __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, __jsx(\"b\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"Launch Year:\"), item.launch_year), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, __jsx(\"b\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, \"Successful Launch:-\"), item.launch_success ? \"True\" : \"false\"))));\n    }));\n  } // }\n\n}\n\n_s(Spacex, \"HjtP0LvW2qfNexmiGaAPFGvnseU=\");\n\n_c = Spacex;\n\nSpacex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var url, params, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"ctx\", ctx);\n            _context.prev = 1;\n            url = new URL(\"https://api.spacexdata.com/v3/launches?limit=100\");\n            params = ctx.query; // or:\n\n            url.search = new URLSearchParams(params).toString();\n            _context.next = 7;\n            return fetch(url);\n\n          case 7:\n            res = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: res.data\n            });\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRouter(Spacex);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Spacex\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/rekha/my-next-app/pages/Spacex.js"],"names":["React","useEffect","useState","axios","withRouter","FiltersComponent","fetchSpacex","Spacex","props","console","log","data","setData","query","router","handleApiCall","params","then","json","history","error","map","item","index","links","mission_patch_small","mission_name","flight_number","mission_id","length","id","launch_year","launch_success","getInitialProps","ctx","url","URL","search","URLSearchParams","toString","fetch","res"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nimport { FiltersComponent } from \"../components/filter\";\nimport \"../Resources/main.css\";\nimport { fetchSpacex } from \"../Api\";\n\nfunction Spacex(props) {\n  console.log(\"props rendered\", props);\n  const [data, setData] = useState(props.data);\n  const { ...query } = props.router;\n\n  const handleApiCall = (params) => {\n    fetchSpacex(params).then((json) => {\n      setData(json);\n    });\n  };\n\n  useEffect(() => {\n    // verify props have changed to avoid an infinite loop\n    // fetch data based on the new query\n    handleApiCall(query);\n    console.log(\"handleApiCall\", query);\n  }, query);\n  const { history } = props;\n  //   console.log(\"1111111111\", data);\n  if (!data) {\n    return <div>Error: {props.error}</div>;\n  } else {\n    return (\n      <div>\n        <h1>Spacex</h1>\n        <br />\n        <FiltersComponent history={history} />\n        {data.map((item, index) => (\n          <div key={index} className=\"spacex-card\">\n            <img src={item.links.mission_patch_small} alt=\"User Icon\"></img>\n            <div className=\"UserDetails\">\n              <div className=\"card_content\">\n                <a href=\"#\">\n                  {item.mission_name} #{item.flight_number}\n                </a>\n                {item.mission_id.length && (\n                  <ul>\n                    <b>Mission Ids</b>\n                    {item.mission_id.map((id) => (\n                      <li key={id}>{id}</li>\n                    ))}\n                  </ul>\n                )}\n                {item.launch_year && (\n                  <div>\n                    <b>Launch Year:</b>\n                    {item.launch_year}\n                  </div>\n                )}\n                <p>\n                  <b>Successful Launch:-</b>\n                  {item.launch_success ? \"True\" : \"false\"}\n                </p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n  // }\n}\nSpacex.getInitialProps = async (ctx) => {\n  console.log(\"ctx\", ctx);\n  try {\n    var url = new URL(\"https://api.spacexdata.com/v3/launches?limit=100\");\n    var params = ctx.query; // or:\n    url.search = new URLSearchParams(params).toString();\n    const res = await fetch(url);\n    return { data: res.data };\n  } catch (e) {\n    return { error: e };\n  }\n};\nexport default withRouter(Spacex);\n"]},"metadata":{},"sourceType":"module"}