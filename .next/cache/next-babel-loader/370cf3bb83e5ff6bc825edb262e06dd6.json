{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/rekha/my-next-app/pages/Spacex.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nimport { FiltersComponent } from \"../components/filter\";\nimport \"../Resources/main.css\";\nimport { fetchSpacex } from \"../Api\";\n\nfunction Spacex(props) {\n  _s();\n\n  var _this = this;\n\n  console.log(\"1111111111\", props.data);\n\n  var _props = _slicedToArray(props, 2),\n      data = _props[0],\n      setData = _props[1];\n\n  var _props2 = _slicedToArray(props, 2),\n      error = _props2[0],\n      setError = _props2[1];\n\n  var query = props.router.query;\n\n  var handleApiCall = function handleApiCall(params) {\n    fetchSpacex(params).then(function (json) {\n      setData(json);\n    });\n  };\n\n  useEffect(function () {\n    // verify props have changed to avoid an infinite loop\n    if (query !== prevProps.router.query) {\n      // fetch data based on the new query\n      handleApiCall(query);\n    }\n  });\n  var history = props.history;\n  console.log(\"history\", history);\n\n  if (this.state.error) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \"Error: \", this.props.error.message);\n  } else {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Spacex\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), __jsx(FiltersComponent, {\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), this.state.data.map(function (item, index) {\n      return __jsx(\"div\", {\n        key: index,\n        className: \"spacex-card\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        src: item.links.mission_patch_small,\n        alt: \"User Icon\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }), __jsx(\"div\", {\n        className: \"UserDetails\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"card_content\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        href: \"#\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, item.mission_name, \" #\", item.flight_number), item.mission_id.length && __jsx(\"ul\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }, __jsx(\"b\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, \"Mission Ids\"), item.mission_id.map(function (id) {\n        return __jsx(\"li\", {\n          key: id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 23\n          }\n        }, id);\n      })), item.launch_year && __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, __jsx(\"b\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"Launch Year:\"), item.launch_year), __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, __jsx(\"b\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, \"Successful Launch:-\"), item.launch_success ? \"True\" : \"false\"))));\n    }));\n  } // }\n\n}\n\n_s(Spacex, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Spacex;\n\nSpacex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"https://api.spacexdata.com/v3/launches?limit=100\");\n\n          case 3:\n            res = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: res.data\n            });\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRouter(Spacex);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Spacex\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/rekha/my-next-app/pages/Spacex.js"],"names":["React","useEffect","axios","withRouter","FiltersComponent","fetchSpacex","Spacex","props","console","log","data","setData","error","setError","query","router","handleApiCall","params","then","json","prevProps","history","state","message","map","item","index","links","mission_patch_small","mission_name","flight_number","mission_id","length","id","launch_year","launch_success","getInitialProps","ctx","get","res"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nimport { FiltersComponent } from \"../components/filter\";\nimport \"../Resources/main.css\";\nimport { fetchSpacex } from \"../Api\";\n\nfunction Spacex(props) {\n  console.log(\"1111111111\", props.data);\n  const [data, setData] = props;\n  const [error, setError] = props;\n  const { query } = props.router;\n\n  const handleApiCall = (params) => {\n    fetchSpacex(params).then((json) => {\n      setData(json);\n    });\n  };\n\n  useEffect(() => {\n    // verify props have changed to avoid an infinite loop\n    if (query !== prevProps.router.query) {\n      // fetch data based on the new query\n      handleApiCall(query);\n    }\n  });\n  const { history } = props;\n  console.log(\"history\", history);\n  if (this.state.error) {\n    return <div>Error: {this.props.error.message}</div>;\n  } else {\n    return (\n      <div>\n        <h1>Spacex</h1>\n        <br />\n        <FiltersComponent history={history} />\n        {this.state.data.map((item, index) => (\n          <div key={index} className=\"spacex-card\">\n            <img src={item.links.mission_patch_small} alt=\"User Icon\"></img>\n            <div className=\"UserDetails\">\n              <div className=\"card_content\">\n                <a href=\"#\">\n                  {item.mission_name} #{item.flight_number}\n                </a>\n                {item.mission_id.length && (\n                  <ul>\n                    <b>Mission Ids</b>\n                    {item.mission_id.map((id) => (\n                      <li key={id}>{id}</li>\n                    ))}\n                  </ul>\n                )}\n                {item.launch_year && (\n                  <div>\n                    <b>Launch Year:</b>\n                    {item.launch_year}\n                  </div>\n                )}\n                <p>\n                  <b>Successful Launch:-</b>\n                  {item.launch_success ? \"True\" : \"false\"}\n                </p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n  // }\n}\nSpacex.getInitialProps = async (ctx) => {\n  try {\n    const res = await axios.get(\n      \"https://api.spacexdata.com/v3/launches?limit=100\"\n    );\n    return { data: res.data };\n  } catch (e) {\n    return { error: e };\n  }\n};\nexport default withRouter(Spacex);\n"]},"metadata":{},"sourceType":"module"}