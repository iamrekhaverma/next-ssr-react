{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/rekha/my-next-app/pages/Spacex.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nimport { FiltersComponent } from \"../components/filter\";\nimport { Header } from \"../components/header\";\nimport { Footer } from \"../components/footer\";\nimport \"../Resources/main.scss\";\nimport { fetchSpacex } from \"../Api\";\nimport { TextHeader } from \"../components/core/heading/TextHeader\";\n\nfunction Spacex(props) {\n  _s();\n\n  console.log(\"props rendered\", props);\n\n  var _useState = useState(props.data),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var query = props.router.query;\n\n  var handleApiCall = function handleApiCall(params) {\n    fetchSpacex(params).then(function (json) {\n      setData(json);\n    });\n  };\n\n  useEffect(function () {\n    // verify props have changed to avoid an infinite loop\n    // fetch data based on the new query\n    handleApiCall(query);\n    console.log(\"handleApiCall\", query);\n  }, []);\n  var history = props.history; //   console.log(\"1111111111\", data);\n\n  if (!data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    }, \"Error: \", props.error);\n  } else {\n    return __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, __jsx(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, __jsx(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"London\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Paris\")), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Tokyo\")))), __jsx(\"article\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"London\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants.\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Standing on the River Thames, London has been a major settlement for two millennia, its history going back to its founding by the Romans, who named it Londinium.\"))), __jsx(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Footer\")));\n  } // }\n\n}\n\n_s(Spacex, \"HjtP0LvW2qfNexmiGaAPFGvnseU=\");\n\n_c = Spacex;\n\nSpacex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var url, params, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"ctx\", ctx);\n            _context.prev = 1;\n            url = new URL(\"https://api.spacexdata.com/v3/launches?limit=100\");\n            params = ctx.query; // or:\n\n            url.search = new URLSearchParams(params).toString();\n            _context.next = 7;\n            return fetch(url);\n\n          case 7:\n            res = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: res.data\n            });\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withRouter(Spacex);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Spacex\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/rekha/my-next-app/pages/Spacex.js"],"names":["React","useEffect","useState","axios","withRouter","FiltersComponent","Header","Footer","fetchSpacex","TextHeader","Spacex","props","console","log","data","setData","query","router","handleApiCall","params","then","json","history","error","getInitialProps","ctx","url","URL","search","URLSearchParams","toString","fetch","res"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"next/router\";\nimport { FiltersComponent } from \"../components/filter\";\nimport { Header } from \"../components/header\";\nimport { Footer } from \"../components/footer\";\nimport \"../Resources/main.scss\";\nimport { fetchSpacex } from \"../Api\";\nimport { TextHeader } from \"../components/core/heading/TextHeader\";\n\nfunction Spacex(props) {\n  console.log(\"props rendered\", props);\n  const [data, setData] = useState(props.data);\n  const { query } = props.router;\n\n  const handleApiCall = (params) => {\n    fetchSpacex(params).then((json) => {\n      setData(json);\n    });\n  };\n\n  useEffect(() => {\n    // verify props have changed to avoid an infinite loop\n    // fetch data based on the new query\n    handleApiCall(query);\n    console.log(\"handleApiCall\", query);\n  }, []);\n  const { history } = props;\n  //   console.log(\"1111111111\", data);\n  if (!data) {\n    return <div>Error: {props.error}</div>;\n  } else {\n    return (\n      <div className=\"row\">\n        <section>\n          <nav>\n            <ul>\n              <li>\n                <a href=\"#\">London</a>\n              </li>\n              <li>\n                <a href=\"#\">Paris</a>\n              </li>\n              <li>\n                <a href=\"#\">Tokyo</a>\n              </li>\n            </ul>\n          </nav>\n\n          <article>\n            <h1>London</h1>\n            <p>\n              London is the capital city of England. It is the most populous\n              city in the United Kingdom, with a metropolitan area of over 13\n              million inhabitants.\n            </p>\n            <p>\n              Standing on the River Thames, London has been a major settlement\n              for two millennia, its history going back to its founding by the\n              Romans, who named it Londinium.\n            </p>\n          </article>\n        </section>\n\n        <footer>\n          <p>Footer</p>\n        </footer>\n        {/* <Header />\n        <br />\n        <div className=\"column1\">\n          <FiltersComponent history={history} />\n        </div>\n        <div className=\"column\">\n          {data.map((item, index) => (\n            <div key={index} className=\"cards_item\">\n              <img\n                src={item.links.mission_patch_small}\n                className=\"card_image\"\n                alt=\"User Icon\"\n              />\n              <div className=\"card_content\">\n                <a href=\"#\">\n                  {item.mission_name} #{item.flight_number}\n                </a>\n                {item.mission_id.length && (\n                  <ul>\n                    <b>Mission Ids</b>\n                    {item.mission_id.map((id) => (\n                      <li key={id}>{id}</li>\n                    ))}\n                  </ul>\n                )}\n                {item.launch_year && (\n                  <div>\n                    <b>Launch Year:</b>\n                    {item.launch_year}\n                  </div>\n                )}\n                <p>\n                  <b>Successful Launch:-</b>\n                  {item.launch_success ? \"True\" : \"false\"}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n        <Footer devName=\"Rekha\" /> */}\n      </div>\n    );\n  }\n  // }\n}\nSpacex.getInitialProps = async (ctx) => {\n  console.log(\"ctx\", ctx);\n  try {\n    var url = new URL(\"https://api.spacexdata.com/v3/launches?limit=100\");\n    var params = ctx.query; // or:\n    url.search = new URLSearchParams(params).toString();\n    const res = await fetch(url);\n    return { data: res.data };\n  } catch (e) {\n    return { error: e };\n  }\n};\nexport default withRouter(Spacex);\n"]},"metadata":{},"sourceType":"module"}